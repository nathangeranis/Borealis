@inherits LayoutComponentBase
<RadzenDialog/>
<RadzenNotification/>
<RadzenContextMenu/>
<RadzenTooltip/>
@*<MudThemeProvider Theme="_theme.Theme" />
<MudDialogProvider />
<MudSnackbarProvider />
<MudBreakpointProvider>
    <MudLayout>
        <MudAppBar Color="Color.Primary" Dense="true" Elevation="2">
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="DrawerToggle" />
            <MudSpacer />
            <MudText Typo="Typo.h5" Align="Align.Center" Inline="true" Color="Color.Surface" Class="white-header-text">Borealis</MudText>
            <MudSpacer />
        </MudAppBar>
       <MudSwipeArea OnSwipe="@OnSwipe" Style="width:10rem; z-index:50;">
            <MudDrawer @bind-Open="_drawerOpen" Elevation="_theme.DrawerElevation" ClipMode="_theme.DrawerClipMode" Variant="@DrawerVariant.Mini" OpenMiniOnHover="true" MiniWidth="3.25rem">
                <NavMenu></NavMenu>
            </MudDrawer>
        </MudSwipeArea>
       <MudMainContent>
            <MudContainer Fixed="true">
                @Body
            </MudContainer>
        </MudMainContent>
    </MudLayout>
</MudBreakpointProvider>
*@
@code {
    ThemeOptions _theme;
    bool _drawerOpen = false;
    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
    //public void OnSwipe(SwipeDirection direction)
    //{
    //    if (direction == SwipeDirection.LeftToRight && !_drawerOpen)
    //    {
    //        _drawerOpen = true;
    //        StateHasChanged();
    //    }
    //    else if (direction == SwipeDirection.RightToLeft && _drawerOpen)
    //    {
    //        _drawerOpen = false;
    //        StateHasChanged();
    //    }
    //}
    protected override void OnInitialized()
    {
        //_theme = ThemeUtility.LoadTheme();
    }
}